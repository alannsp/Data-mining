# Netflix Rating Prediction - Clustering

library(gdata)
help("read.xls")

Movie_Titles<-read.xls("C:/Users/Kartikeya/Desktop/ALDA Project/movie_titles_small.xls",header= F,perl = "C:/Perl64/bin/perl.exe")
names(Movie_Titles)<- c("Movie_ID","Release_Year","Movie_Title")

setwd("C:/Users/Kartikeya/Desktop/ALDA Project/Dataset/training_set_small/")
files_list<- list.files()

i<-1
user_summary<-c()
user_info_summary<-data.frame(User_ID=double(),Number_of_ratings=double(),Sum_of_Ratings=double(),Square_Sum_Ratings=double(),Date_Difference=double())

for(file in files_list)
{
  dataset<-read.table(text=readLines(file)[-1],header=FALSE,sep=",")
  ratings<-dataset[,c(2)]
  average<-mean(ratings)
  standard_deviation<-sd(ratings)
  number<-length(ratings)
  
  #Movie Summary
  
  if(!exists("Movie_Summary"))
  {
    Movie_Summary<-data.frame(Movie_ID=i,Average_Movie_Rating=average,Standard_Deviation=standard_deviation,Number_of_Ratings=number)
  }
  
  
  else if(exists("Movie_Summary"))
  {
    
    Movie_Summary_temp<-data.frame(Movie_ID=i,Average_Movie_Rating=average,Standard_Deviation=standard_deviation,Number_of_Ratings=number)
    Movie_Summary<-rbind(Movie_Summary,Movie_Summary_temp)
    rm(Movie_Summary_temp)
  }
  
  #User Summary
  
  user_id<-dataset[,c(1)]
  
  for(j in 1:number){
    
    if(!is.element(user_id[j],user_summary)){
      release_year<- Movie_Titles[,c(2)]
      rating_year<- substr(dataset[,c(3)],1,4)
      difference=strtoi(rating_year[j])-release_year[i]
      
      user_summary<-append(user_summary,user_id[j])
      user_info_summary_temp<-data.frame(User_ID=user_id[j],Number_of_ratings=1,Sum_of_Ratings=ratings[j],Square_Sum_Ratings=ratings[j]^2,Date_Difference=difference)
      user_info_summary<-rbind(user_info_summary,user_info_summary_temp)
      rm(user_info_summary_temp)
      #     assign(paste("User",user_id[j],sep=""),data.frame(Movie_ID=i,Rating=ratings[j],Difference=difference))
    }
    
    else{
      
      
      release_year<- Movie_Titles[,c(2)]
      rating_year<- substr(dataset[,c(3)],1,4)
      difference=strtoi(rating_year[j])-release_year[i]
      
      user_info_summary$Number_of_ratings[user_info_summary$User_ID == user_id[j]]<- user_info_summary$Number_of_ratings[user_info_summary$User_ID == user_id[j]]+1
      user_info_summary$Sum_of_Ratings[user_info_summary$User_ID == user_id[j]]<- user_info_summary$Sum_of_Ratings[user_info_summary$User_ID == user_id[j]] + ratings[j]
      user_info_summary$Square_Sum_Ratings[user_info_summary$User_ID == user_id[j]]<- user_info_summary$Square_Sum_Ratings[user_info_summary$User_ID == user_id[j]] + ratings[j]^2
      user_info_summary$Date_Difference[user_info_summary$User_ID == user_id[j]]<- user_info_summary$Date_Difference[user_info_summary$User_ID == user_id[j]] + difference
      
      
      #       user_temp<-data.frame(Movie_ID=i,Rating=ratings[j],Difference=difference)
      #       temp<-get(paste("User",user_id[j],sep=""))
      #       temp<-rbind(temp,user_temp)
      #       assign(paste("User",user_id[j],sep=""),temp)
      #       rm(user_temp)
      #       rm(temp)
    }
    
  }
  
  i<-i+1
  
  rm(dataset)
  rm(ratings)
  rm(average)
  rm(standard_deviation)
  rm(number)
  rm(release_year)
  rm(rating_year)
  rm(difference)
}


user_info_summary[c("Avg_User_Rating","Std_Rating","Avg_Date_Difference")]<-NA
length_user_info_summary<-length(user_summary)


for(i in 1:length_user_info_summary){
  
  no_of_ratings<-user_info_summary[i,"Number_of_ratings"]
  sum_of_ratings<-user_info_summary[i,"Sum_of_Ratings"]
  square_sum<-user_info_summary[i,"Square_Sum_Ratings"]
  date_diff<-user_info_summary[i,"Date_Difference"]
  
  avg_user_rating<- sum_of_ratings/no_of_ratings
  if(no_of_ratings==1){
    std_rating=0
  }
  else{
    std_rating<-sqrt((square_sum-(no_of_ratings*((avg_user_rating)^2)))/(no_of_ratings-1))
  }
  avg_date_diff<- date_diff/no_of_ratings
  
  user_info_summary$Avg_User_Rating[user_info_summary$User_ID == user_summary[i]]<- avg_user_rating
  user_info_summary$Std_Rating[user_info_summary$User_ID == user_summary[i]]<- std_rating
  user_info_summary$Avg_Date_Difference[user_info_summary$User_ID == user_summary[i]]<- avg_date_diff
  
  
  rm(no_of_ratings)
  rm(sum_of_ratings)
  rm(square_sum)
  rm(date_diff)
  rm(avg_date_diff)
}


##########OLD CODE####################
#number_of_users<-length(user_summary) 
#user_info_summary<-data.frame(User_id=double(),Avg_Rating=double(),N_Rating=double(),SD_Rating=double(),Date_Difference_Avg=double())

# for(i in 1:number_of_users)
# {
# temp<-get(paste("User",user_summary[i],sep=""))  
# ratings1<-temp[,c(2)]
# date_diff<-temp[,c(3)]
# average1<-mean(ratings1)
# standard_deviation1<-sd(ratings1)
# number_of_ratings<-length(ratings1)
# average_date_diff<-mean(date_diff)
# 
# if(number_of_ratings==1)
# {
#   standard_deviation1=0
# }
# 
# user_info_summary_temp<-data.frame(User_id=user_summary[i],Avg_Rating=average1,N_Rating=number_of_ratings,SD_Rating=standard_deviation1,Date_Difference_Avg=average_date_diff)
# user_info_summary<-rbind(user_info_summary,user_info_summary_temp)  
# rm(user_info_summary_temp)
# }
##############OLD CODE##############



# K-Means Clustering

(Movie_cluster<-kmeans(Movie_Summary[,c(2,3,4)],5))


(User_cluster<-kmeans(user_info_summary[,c(2,6,7,8)],5))

